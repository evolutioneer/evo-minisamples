package model.common.serviceinterface;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.soap.SOAPBinding;

import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import model.vo.common.CandyViewSDO;
import model.vo.common.JDemoViewSDO;
import model.vo.common.WidgetViewSDO;

import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
import oracle.webservices.annotations.SDODatabinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 04 14:29:08 EDT 2014
// ---------------------------------------------------------------------
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.WRAPPED, style = SOAPBinding.Style.DOCUMENT)
@PortableWebService(targetNamespace="/model/common/", name="AppModuleService", wsdlLocation="model/common/serviceinterface/AppModuleService.wsdl")
@SDODatabinding(schemaLocation="model/common/serviceinterface/AppModuleService.xsd")
public interface AppModuleService {
    public static final String NAME = "{/model/common/}AppModuleService";

    /**
     * Exported method whoseYourDaddy from AppModule.
     */
    @WebMethod(action="/model/common/whoseYourDaddy", operationName="whoseYourDaddy")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="whoseYourDaddy")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="whoseYourDaddyResponse")
    @WebResult(name="result")
    String whoseYourDaddy() throws ServiceException;

    @WebMethod(action="/model/common/findCandyView1", operationName="findCandyView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="findCandyView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="findCandyView1Response")
    @WebResult(name="result")
    List<CandyViewSDO> findCandyView1(@WebParam(mode = WebParam.Mode.IN, name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/model/common/findJDemoView1", operationName="findJDemoView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="findJDemoView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="findJDemoView1Response")
    @WebResult(name="result")
    List<JDemoViewSDO> findJDemoView1(@WebParam(mode = WebParam.Mode.IN, name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;

    @WebMethod(action="/model/common/createWidgetView1", operationName="createWidgetView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="createWidgetView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="createWidgetView1Response")
    @WebResult(name="result")
    WidgetViewSDO createWidgetView1(@WebParam(mode = WebParam.Mode.IN, name="widgetView1")
        WidgetViewSDO widgetView1) throws ServiceException;

    @WebMethod(action="/model/common/updateWidgetView1", operationName="updateWidgetView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="updateWidgetView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="updateWidgetView1Response")
    @WebResult(name="result")
    WidgetViewSDO updateWidgetView1(@WebParam(mode = WebParam.Mode.IN, name="widgetView1")
        WidgetViewSDO widgetView1) throws ServiceException;

    @WebMethod(action="/model/common/findWidgetView1", operationName="findWidgetView1")
    @RequestWrapper(targetNamespace="/model/common/types/", localName="findWidgetView1")
    @ResponseWrapper(targetNamespace="/model/common/types/", localName="findWidgetView1Response")
    @WebResult(name="result")
    List<WidgetViewSDO> findWidgetView1(@WebParam(mode = WebParam.Mode.IN, name="findCriteria")
        FindCriteria findCriteria, @WebParam(mode = WebParam.Mode.IN, name="findControl")
        FindControl findControl) throws ServiceException;
}
