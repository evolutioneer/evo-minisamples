package model.server.serviceinterface;

import java.lang.reflect.Method;

import java.util.List;

import javax.ejb.Remote;
import javax.ejb.Stateless;

import javax.interceptor.Interceptors;

import model.common.PartsViewSDO;
import model.common.serviceinterface.AppModuleService;

import oracle.jbo.common.Diagnostic;
import oracle.jbo.common.sdo.SDOHelper;
import oracle.jbo.common.service.types.FindControl;
import oracle.jbo.common.service.types.FindCriteria;
import oracle.jbo.server.svc.ServiceContextInterceptor;
import oracle.jbo.server.svc.ServiceImpl;
import oracle.jbo.service.errors.ServiceException;

import oracle.webservices.annotations.PortableWebService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 19 05:50:11 EDT 2014
// ---------------------------------------------------------------------
@Stateless(name="model.common.AppModuleServiceBean", mappedName="AppModuleServiceBean")
@Remote(AppModuleService.class)
@PortableWebService(targetNamespace="/model/common/", serviceName="AppModuleService", portName="AppModuleServiceSoapHttpPort",
    endpointInterface="model.common.serviceinterface.AppModuleService")
@Interceptors( { ServiceContextInterceptor.class })
public class AppModuleServiceImpl extends ServiceImpl implements AppModuleService {
    private static boolean _isInited = false;

    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleServiceImpl() {
        init();
        setApplicationModuleDefName("model.AppModule");
        setConfigurationName("AppModuleService");
    }

    /**
     * Generated method. Do not modify. Do initialization in the constructor
     */
    protected void init() {
        if (_isInited) {
            return;
        }
        synchronized (AppModuleServiceImpl.class) {
            if (_isInited) {
                return;
            }
            try {
                SDOHelper.INSTANCE.defineSchema("model/common/serviceinterface/", "AppModuleService.xsd");
                _isInited = true;
            } catch (Exception ex) {
                Diagnostic.printStackTrace(ex);
            }
        }
    }

    /**
     * findPartsView1WithPartIdList: generated method. Do not modify.
     */
    public List<PartsViewSDO> findPartsView1WithPartIdList(FindCriteria findCriteria, String PartIdList,
                                                           FindControl findControl) throws ServiceException {
        return (List<PartsViewSDO>)find(findCriteria, findControl, "PartsView1", PartsViewSDO.class, "WithPartIdList",
                                        new NamedParam[] { new NamedParam("PartIdList", PartIdList) });
    }
}
