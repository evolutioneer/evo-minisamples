package model;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 30 09:44:39 EDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SenpaiImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SenpaiId {
            public Object get(SenpaiImpl obj) {
                return obj.getSenpaiId();
            }

            public void put(SenpaiImpl obj, Object value) {
                obj.setSenpaiId((BigDecimal)value);
            }
        }
        ,
        SenpaiFirstName {
            public Object get(SenpaiImpl obj) {
                return obj.getSenpaiFirstName();
            }

            public void put(SenpaiImpl obj, Object value) {
                obj.setSenpaiFirstName((String)value);
            }
        }
        ,
        SenpaiLastName {
            public Object get(SenpaiImpl obj) {
                return obj.getSenpaiLastName();
            }

            public void put(SenpaiImpl obj, Object value) {
                obj.setSenpaiLastName((String)value);
            }
        }
        ,
        FullHonorificName {
            public Object get(SenpaiImpl obj) {
                return obj.getFullHonorificName();
            }

            public void put(SenpaiImpl obj, Object value) {
                obj.setFullHonorificName((String)value);
            }
        }
        ,
        Kohai {
            public Object get(SenpaiImpl obj) {
                return obj.getKohai();
            }

            public void put(SenpaiImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SenpaiImpl object);

        public abstract void put(SenpaiImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SENPAIID = AttributesEnum.SenpaiId.index();
    public static final int SENPAIFIRSTNAME = AttributesEnum.SenpaiFirstName.index();
    public static final int SENPAILASTNAME = AttributesEnum.SenpaiLastName.index();
    public static final int FULLHONORIFICNAME = AttributesEnum.FullHonorificName.index();
    public static final int KOHAI = AttributesEnum.Kohai.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SenpaiImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Senpai");
    }

    /**
     * Gets the attribute value for SenpaiId, using the alias name SenpaiId.
     * @return the value of SenpaiId
     */
    public BigDecimal getSenpaiId() {
        return (BigDecimal)getAttributeInternal(SENPAIID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SenpaiId.
     * @param value value to set the SenpaiId
     */
    public void setSenpaiId(BigDecimal value) {
        setAttributeInternal(SENPAIID, value);
    }

    /**
     * Gets the attribute value for SenpaiFirstName, using the alias name SenpaiFirstName.
     * @return the value of SenpaiFirstName
     */
    public String getSenpaiFirstName() {
        return (String)getAttributeInternal(SENPAIFIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SenpaiFirstName.
     * @param value value to set the SenpaiFirstName
     */
    public void setSenpaiFirstName(String value) {
        setAttributeInternal(SENPAIFIRSTNAME, value);
    }

    /**
     * Gets the attribute value for SenpaiLastName, using the alias name SenpaiLastName.
     * @return the value of SenpaiLastName
     */
    public String getSenpaiLastName() {
        return (String)getAttributeInternal(SENPAILASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for SenpaiLastName.
     * @param value value to set the SenpaiLastName
     */
    public void setSenpaiLastName(String value) {
        setAttributeInternal(SENPAILASTNAME, value);
    }

    /**
     * Gets the attribute value for FullHonorificName, using the alias name FullHonorificName.
     * @return the value of FullHonorificName
     */
    public String getFullHonorificName() {
        //return (String)getAttributeInternal(FULLHONORIFICNAME);
        return getSenpaiFirstName() + " " + getSenpaiLastName() + " Sama";
    }

    /**
     * Sets <code>value</code> as the attribute value for FullHonorificName.
     * @param value value to set the FullHonorificName
     */
    public void setFullHonorificName(String value) {
        //setAttributeInternal(FULLHONORIFICNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getKohai() {
        return (RowIterator)getAttributeInternal(KOHAI);
    }

    /**
     * @param senpaiId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal senpaiId) {
        return new Key(new Object[]{senpaiId});
    }


}
